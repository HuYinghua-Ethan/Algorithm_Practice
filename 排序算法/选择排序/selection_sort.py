"""
选择排序（selection sort）的工作原理：开启一个循环，每轮从未排序区间选择最小的元素，将其放到已排序区间的末尾。

设数组的长度为 n，选择排序的算法流程：
初始状态下，所有元素未排序，即未排序（索引）区间为[0, n - 1]。
选取区间 [0, n - 1] 中的最小元素，将其与索引 0 处的元素交换。完成后，数组前 1 个元素已排序。
选取区间 [1, n - 1] 中的最小元素，将其与索引 1 处的元素交换。完成后，数组前 2 个元素已排序。
以此类推。经过 n - 1 轮选择与交换后，数组前 n - 1个元素已排序。
仅剩的一个元素必定是最大元素，无须排序，因此数组排序完成。
"""


def selection_sort(nums):
    n = len(nums)
    for i in range(n - 1):  # 只需要n-1轮
        k = i
        for j in range(i + 1, n):
            if nums[j] < nums[k]:
                k = j
        nums[i], nums[k] = nums[k], nums[i]  # 交换最小元素与未排序区间的第一个元素


if __name__ == "__main__":
    nums = [4, 1, 3, 1, 5, 2]   
    selection_sort(nums)
    print("经过选择排序后的数组为: ", nums)

